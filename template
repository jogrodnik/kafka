#!/bin/bash

#export KAFKA_ALA_OLA=2000:
#
#
##Issue newline to config file in case there is not one already
#echo "" >> "server.properties"
#(
#    function updateConfig() {
#        key=$1
#        value=$2
#        file=$3
#
#        # Omit $value here, in case there is sensitive information
#        echo "[Configuring] '$key' in '$file'"
#
#        # If config exists in file, replace it. Otherwise, append to file.
#        if grep -E -q "^#?$key=" "$file"; then
#            sed -r -i "s@^#?$key=.*@$key=$value@g" "$file" #note that no config values may contain an '@' char
#        else
#            echo "$key=$value" >> "$file"
#        fi
#    }
#    EXCLUSIONS="KAFKA_VERSION|KAFKA_HEAP_OPTS|KAFKA_LOG4J_OPTS|KAFKA_JMX_OPTS|KAFKA_JVM_PERFORMANCE_OPTS|KAFKA_GC_LOG_OPTS|KAFKA_LOG4J_ROOT_LOGLEVEL|KAFKA_LOG4J_LOGGERS|KAFKA_TOOLS_LOG4J_LOGLEVEL|"
#    IFS=$'\n'
#    for VAR in $(env)
#    do
#        env_var=$(echo "$VAR" | cut -d= -f1)
#        if [[ "$EXCLUSIONS" = *"|$env_var|"* ]]; then
#            echo "Excluding $env_var from broker config"
#            continue
#        fi
#        if [[ $env_var =~ ^KAFKA_ ]]; then
#            kafka_name=$(echo "$env_var" | cut -d_ -f2- | tr '[:upper:]' '[:lower:]' | tr _ .)
#            updateConfig "$kafka_name" "${!env_var}" "server.properties"
#        fi
#
#        if [[ $env_var =~ ^LOG4J_ ]]; then
#            log4j_name=$(echo "$env_var" | tr '[:upper:]' '[:lower:]' | tr _ .)
#            updateConfig "$log4j_name" "${!env_var}" "log4j.properties"
#        fi
#    done
#)

z1="|dddd|bbb|ccc|"

if [[ $z1 = *"|bbb|"* ]]; then
  echo OK
else
  echo NIE
fi
